.\" Manpage for _printf.
.TH _PRINTF 3 "19 OCTOBER 2022" "ALX AFRICA 0x11. C - printf"

.SH NAME
.B _printf\fR \- formatted output conversion

.SH SYNOPSIS
.B #include \fB"main.h"

.B int printf(const char *\fIformat\fB, ...);

.SH DESCRIPTION
The function \fB_printf()\fR produces output according to a format and
write output to \fIstdout\fR, the standard output stream.

The function write the ouput under the control of a \fIformat\fR string
thatspecifies how subsequent arguments (accessed via the variable-length
argument facilities of stdarg(3)) are converted for output.

.B Return value

.in +2n
fB_printf()\fR returns the number of characters printed (not including
the trailing `\0' used to end output to strings) or a negative value, -1,
if an output error occurs
.in

.B Format of the format string

.in +2n
The format string is a constant character string composed of zero or more
directives: ordinary characters (not \fB%\fR) which are copied unchanged to
the output stream; and conversion specifications, each of which results in
fetching zero or more subsequent arguments. Each conversion specification is
introduced by the character \fB%\fR and ends with a \fIconversion specifier\fR.

In between the \fB%\fR character and conversion specifier, there may be (in
order) zero or more \fIflags\fR, an optional minimum \fIfield width\fR, an
optional \fIprecision\fR and an optional \fIlength\fR modifier. The arguments
must correspond properly with the conversion specifier, which are used by default
 in the order given.
.in

The character \fB%\fR may be followed by zero or more of the following flags:

.B The conversion specifier

.in +2n
A character that specifies the type of conversion to be applied. The conversion
specifiers and their meanings are:

.TP
.B c
.R The \fIint\fR argument is converted to an \fIunsigned char\fR, and the resulting
 character is written.
.TP
.B s
.R The \fIconst char *\fR argument is a pointer to an array of characters, that
converts the corresponding argument to a character string.
.TP
.B d, i
.R The \fIint\fR argument is converted to signed decimal notation.
.TP
.B o, u, x, X
.R The \fIunsigned int\fR argument is converted to unsigned octal \fIo\fR
(base 8 number), unsigned decimal \fIu\fR (base 10 number), unsigned hexadecimal
\fIx\fR (base 16 number with lowercase letters) and unsigned hexadecimal \fIX\fR
(base 16 number with uppercase letters).
.TP
.B R
.R Identical to the \fBs\fR conversion specifier, except each character of the
array is converted to its corresponding character in ROT13 before breing written.
.TP
.B %, %%
.R If only the \fI%\fR character is written no argument is converted. The complete
 conversion specification is \fI%%\fR, that returns the actual sign if there in front.
.TP
.B r
.R Identical to the \fBs\fR conversion specifier, except characters from the
array are written in reverse, starting from (but not including) the
terminating null byte ('\\0') and ending at the first element of the array.
.TP
.B S
.R The \fIconst char\fR argument is a pointer to an array of characters, that converts
 the corresponding argument to a character st\
ring, with non-printable characters (0 < ASCII value < 32 or >= 127).
.TP
.B p
.R The \fIvoid * pointer\fR argument is printed in hexadecimal.
.TP
.B S
.R The \fIconst char\fR argument is a pointer to an array
.in

.B The flag characters

.in +2n
The character \fI%\fR is followed by zero the following flags:
.TP
.B +
.R A sign \fI+\fR or \fI-\fR will be placed before a number followed by a signed
conversion.
.TP
.B #
.R Print number in hexadecimal, upeercase hexadecimal and octal where the first
character of the output string is made zero.
.TP
.B ' '
.R A space in blank should be left before a positive number followed by a signed
 conversion.
.in

.SH NOTES
.R The \fB_printf()\fR is a project collaboration between \fBBoluwatife O Emmanuel\fR
 and \fBAkintola Habeeb\fR, cohort 9 students of Software Engineering at
\fBALX AFRICA\fR.
.SH BUGS
.R In process
.SH EXAMPLE
.R To print a date and time in the form ``Sunday, July 3, 10:02'', where
weekday and month are pointers to strings:

#include "main.h"

_printf("%s, %s %d, %.2d:%.2d\n",
                   weekday, month, day, hour, min);

.R To print the the string \fBDoing The Hard Work!\fR and its length in decimal.

#include "main.h"

int main(void)

{

	int length;

	_printf(''%s'', ''Doing The Hard Work!'')

	_printf(''Doing The Hard Work! contains %d characters'', length);

	length = _printf(''Doing The Hard Work!'');

	return (0);

}
.SH SEE ALSO
.R printf(3)

The \fB_printf()\fR function emulates functionality of the C standard library
function \fBprintf()\fR. This man page borrows from the corresponding Linux
man page printf(3).

.SH AUTHOR
\fBBoluwatife O Emmanuel\fR and \fBAkintola Habeeb\fR.
